[{"/Users/system-67/Documents/ReactPratice/gmail-clone/src/index.js":"1","/Users/system-67/Documents/ReactPratice/gmail-clone/src/App.js":"2","/Users/system-67/Documents/ReactPratice/gmail-clone/src/app/store.js":"3","/Users/system-67/Documents/ReactPratice/gmail-clone/src/Header.js":"4","/Users/system-67/Documents/ReactPratice/gmail-clone/src/SideBar.js":"5","/Users/system-67/Documents/ReactPratice/gmail-clone/src/SideBarOptions.js":"6","/Users/system-67/Documents/ReactPratice/gmail-clone/src/EmailList.js":"7","/Users/system-67/Documents/ReactPratice/gmail-clone/src/Mail.js":"8","/Users/system-67/Documents/ReactPratice/gmail-clone/src/Section.js":"9","/Users/system-67/Documents/ReactPratice/gmail-clone/src/serviceWorker.js":"10","/Users/system-67/Documents/ReactPratice/gmail-clone/src/EmailRow.js":"11","/Users/system-67/Documents/ReactPratice/gmail-clone/src/features/mailSlice.js":"12","/Users/system-67/Documents/ReactPratice/gmail-clone/src/SendMail.js":"13","/Users/system-67/Documents/ReactPratice/gmail-clone/src/firebase.js":"14","/Users/system-67/Documents/ReactPratice/gmail-clone/src/features/userSlice.js":"15","/Users/system-67/Documents/ReactPratice/gmail-clone/src/Login.js":"16"},{"size":644,"mtime":1608996187360,"results":"17","hashOfConfig":"18"},{"size":1613,"mtime":1609600352113,"results":"19","hashOfConfig":"18"},{"size":257,"mtime":1609348304494,"results":"20","hashOfConfig":"18"},{"size":1967,"mtime":1609600415719,"results":"21","hashOfConfig":"18"},{"size":2186,"mtime":1609076609151,"results":"22","hashOfConfig":"18"},{"size":347,"mtime":1609048703277,"results":"23","hashOfConfig":"18"},{"size":2960,"mtime":1609348520315,"results":"24","hashOfConfig":"18"},{"size":2901,"mtime":1609342810552,"results":"25","hashOfConfig":"18"},{"size":395,"mtime":1609054526796,"results":"26","hashOfConfig":"18"},{"size":5141,"mtime":1608996187364,"results":"27","hashOfConfig":"18"},{"size":1578,"mtime":1609346546841,"results":"28","hashOfConfig":"18"},{"size":735,"mtime":1609342123594,"results":"29","hashOfConfig":"18"},{"size":1973,"mtime":1609384500546,"results":"30","hashOfConfig":"18"},{"size":731,"mtime":1609384450425,"results":"31","hashOfConfig":"18"},{"size":428,"mtime":1609348250949,"results":"32","hashOfConfig":"18"},{"size":1017,"mtime":1609600306814,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"18q8rrp",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"36"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"36"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"/Users/system-67/Documents/ReactPratice/gmail-clone/src/index.js",[],["69","70"],"/Users/system-67/Documents/ReactPratice/gmail-clone/src/App.js",[],"/Users/system-67/Documents/ReactPratice/gmail-clone/src/app/store.js",[],"/Users/system-67/Documents/ReactPratice/gmail-clone/src/Header.js",[],"/Users/system-67/Documents/ReactPratice/gmail-clone/src/SideBar.js",[],"/Users/system-67/Documents/ReactPratice/gmail-clone/src/SideBarOptions.js",[],"/Users/system-67/Documents/ReactPratice/gmail-clone/src/EmailList.js",["71"],"import React, {useState, useEffect} from 'react'\nimport './css/emaillist.css';\nimport { IconButton, Checkbox } from '@material-ui/core';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport RedoIcon from '@material-ui/icons/Redo';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport KeyboardHideIcon from '@material-ui/icons/KeyboardHide';\nimport SettingIcon from '@material-ui/icons/Settings';\nimport InboxIcon from '@material-ui/icons/Inbox';\nimport Section from './Section';\nimport PeopleIcon from '@material-ui/icons/People';\nimport LocalOfferIcon from '@material-ui/icons/LocalOffer';\nimport EmailRow from './EmailRow';\nimport { db } from './firebase';\n\n\nexport default function EmailList() {\n    const [emails, setEmails]= useState([]);\n\n    useEffect(() => {\n    \n        db.collection('emails').orderBy('timestamp', 'desc').onSnapshot(snapShot => setEmails(snapShot.docs.map(doc=>({\n            id:doc.id,\n            data:doc.data()\n        }))));\n        \n        console.log(emails)\n       \n    }, []);\n\n\n\n    return (\n        <div className=\"emailList\">\n            <div className=\"emailList_settings\">\n                <div className=\"emailList_settingsLeft\">\n                    <Checkbox/>\n                    <IconButton>\n                        <ArrowDropDownIcon/>\n                    </IconButton>\n                    <IconButton>\n                    <RedoIcon/>\n                    </IconButton>\n                    <IconButton>\n                        <MoreVertIcon/>\n                    </IconButton>\n\n                </div>\n\n                <div className=\"emailList_settingsRight\">\n                    <IconButton>\n                        <ChevronLeftIcon/>\n                    </IconButton>\n                    <IconButton>\n                        <ChevronRightIcon/>\n                    </IconButton>\n                    <IconButton>\n                        <KeyboardHideIcon/>\n                    </IconButton>\n                    <IconButton>\n                        <SettingIcon/>\n                    </IconButton>\n                </div>\n            </div>\n\n            <div className=\"emailList_sections\">\n                <Section Icon={InboxIcon} title=\"Primary\" color=\"red\" selected/>\n                <Section Icon={PeopleIcon} title=\"Social\" color=\"#1A73E8\" />\n                <Section Icon={LocalOfferIcon} title=\"Promotions\" color=\"green\" />\n\n            </div>\n\n            <div className=\"emailList_list\">\n                {\n                    emails.map(({data, id})=>(\n                        <EmailRow key={id} id={id} title={data.to} subject={data.subject} description={data.message} time={new Date(data.timestamp?.seconds*1000).toUTCString()}/>\n                    ))                    \n                }\n            \n            </div>\n\n        </div>\n    )\n}\n","/Users/system-67/Documents/ReactPratice/gmail-clone/src/Mail.js",[],"/Users/system-67/Documents/ReactPratice/gmail-clone/src/Section.js",[],"/Users/system-67/Documents/ReactPratice/gmail-clone/src/serviceWorker.js",[],"/Users/system-67/Documents/ReactPratice/gmail-clone/src/EmailRow.js",[],"/Users/system-67/Documents/ReactPratice/gmail-clone/src/features/mailSlice.js",[],"/Users/system-67/Documents/ReactPratice/gmail-clone/src/SendMail.js",["72"],"import React from 'react'\nimport CloseIcon from '@material-ui/icons/Close';\nimport { Button } from '@material-ui/core';\nimport './css/sendmail.css';\nimport { useForm } from 'react-hook-form';\nimport {useDispatch} from 'react-redux';\nimport { closeSendMessage } from './features/mailSlice';\nimport {db} from './firebase';\nimport firebase from 'firebase';\n\n\nfunction SendMail() {\n    const dispatch = useDispatch();\n\n    const {register, handleSubmit, watch, errors} = useForm();\n\n    const onSubmit= (formData)=>{\n        console.log(formData);\n        db.collection('emails').add({\n            to:formData.to,\n            subject:formData.subject,\n            message: formData.message,\n            timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n        });\n        dispatch(closeSendMessage());\n    }\n\n    return (\n        <div className=\"sendMail\">\n           <div className=\"sendMail_header\">\n            <h3>New Message</h3>\n            <CloseIcon className=\"sendMail_close\" onClick={()=>dispatch(closeSendMessage())}/>\n           </div>\n           <form onSubmit={handleSubmit(onSubmit)}>\n               <input name=\"to\"  type=\"email\" placeholder=\"To\" ref={register({required:true})}/>\n                {errors.to && <p className=\"sendMail_error\"> To is Required</p>}\n               <input name=\"subject\" type=\"text\" placeholder=\"Subject\" ref={register({required:true})}/>\n               {errors.subject && <p className=\"sendMail_error\"> Subject is Required</p>}\n\n               <input name=\"message\" type=\"text\" placeholder=\"Message\" className=\"sendMail_message\" ref={register({required:true})}/>\n               {errors.message && <p className=\"sendMail_error\"> Message is Required</p>}\n\n               <div className=\"sendMail_options\">\n                   <Button variant=\"contained\" type=\"submit\" color=\"primary\" className=\"sendMail_send\">Send</Button>\n               </div>\n           </form>\n          \n        </div>\n    )\n}\n\nexport default SendMail\n","/Users/system-67/Documents/ReactPratice/gmail-clone/src/firebase.js",[],"/Users/system-67/Documents/ReactPratice/gmail-clone/src/features/userSlice.js",[],"/Users/system-67/Documents/ReactPratice/gmail-clone/src/Login.js",[],{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","severity":1,"message":"78","line":31,"column":8,"nodeType":"79","endLine":31,"endColumn":10,"suggestions":"80"},{"ruleId":"81","severity":1,"message":"82","line":15,"column":36,"nodeType":"83","messageId":"84","endLine":15,"endColumn":41},"no-native-reassign",["85"],"no-negated-in-lhs",["86"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'emails'. Either include it or remove the dependency array.","ArrayExpression",["87"],"no-unused-vars","'watch' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation",{"desc":"88","fix":"89"},"Update the dependencies array to be: [emails]",{"range":"90","text":"91"},[1166,1168],"[emails]"]